[{"path":"https://aletorell.github.io/firstlibAlex/articles/Genere_un_rapport_d_analyses.html","id":"générer-un-rapport-danalyses","dir":"Articles","previous_headings":"","what":"Générer un rapport d’analyses","title":"Générer un rapport d’analyses","text":"Ce document explique comment utiliser les principales fonctions du package. “firstlibAlex”","code":""},{"path":"https://aletorell.github.io/firstlibAlex/articles/Genere_un_rapport_d_analyses.html","id":"résumé-des-données-par-commune","dir":"Articles","previous_headings":"","what":"1️⃣ Résumé des données par commune","title":"Générer un rapport d’analyses","text":"La fonction summary_commune() génère les résultats suivants pour une commune donnée : - Le nom de la commune. - Le nombre d’élus dans la commune. - La distribution des âges des élus dans la commune. - Le nom, le prénom et l’âge de l’élu.e le plus âgé(e). La fonction vérifie également que toutes les colonnes nécessaires sont présentes et que les dates de naissance sont au format correct. En cas d’erreur, elle génère un message d’arrêt. EXEMPLE: Premièrement, nous procédons à créer le dataframe de la commune que nous souhaitons évaluer., dans ce cas nous allos récollecter les données pour Lyon. Une fois la base de données est chargée, passe à l’analyse de la commune de Lyon à partir de la fonction summary_commune.","code":"library(firstlibAlex) Lyon <- creer_commune(elus_cm, \"Lyon\") library(firstlibAlex) summary_commune(Lyon) Commune: Lyon Nombre d'élu.e.s: 73 Distribution des âges:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.   30.00   42.00   47.00   49.41   59.00   75.00 L'élu.e le plus âgé(e):        Nom.de.l.élu Prénom.de.l.élu Age 362811        BLANC       Françoise  75"},{"path":"https://aletorell.github.io/firstlibAlex/articles/Genere_un_rapport_d_analyses.html","id":"résumé-des-données-par-département","dir":"Articles","previous_headings":"","what":"2️⃣ Résumé des données par département","title":"Générer un rapport d’analyses","text":"La fonction Summary_departement() génère un résumé statistique des élus d’un département, y compris les informations sur les âges (distribution de l’âge), les élus les plus âgés et les plus jeunes, ainsi que les communes ayant les moyennes d’âge les plus faibles et les plus élevées. La fonction vérifie également que toutes les colonnes nécessaires sont présentes et que les dates de naissance sont au format correct. En cas d’erreur, elle génère un message d’arrêt. EXEMPLE: Premièrement, nous procédons à créer le dataframe du département que nous souhaitons évaluer., dans ce cas nous allos récollecter les données pour Gironde. Une fois la base de données est chargée, passe à l’analyse du département Gironde à partir de la fonction Summary_departement","code":"library(firstlibAlex) Gironde <- creer_departement(elus_cm, \"Gironde\") library(firstlibAlex) Summary_departement(Gironde) Nom du département: Gironde Nombre de communes: 537 Nombre d'élu.e.s: 8607 Distribution des âges des élu.e.s:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    24.0    48.0    57.0    57.7    68.0    92.0  L'élu.e le/la plus âgé(e): LANDRAU Cécile - Age: 92 - Commune: Gardegan-Et-Tourtirac  L'élu.e le/la plus jeune: BORTOLATO DELANNOY GIRAUD ROULEAU HUGUET MUNOZ LACROIX LOUSTALOT AUBENEAU BERTÉ Enzo Mathilde Jade Baptiste Mathis Iana Thiméo Gaëtan Cloé Nicolas - Age: 24 24 24 24 24 24 24 24 24 24 - Commune: Ambès Biganos Blanquefort Branne Créon Etauliers Montignac La Réole Saint-Christoly-Médoc Saint-Loubès  Commune avec la moyenne d'âge la plus faible: Balizac Distribution des âges des élu.e.s de cette commune:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.   32.00   39.75   42.00   44.33   46.00   65.00  Commune avec la moyenne d'âge la plus élevée: Saint-Martin-De-Lerm Distribution des âges des élu.e.s de cette commune:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    48.0    60.5    72.0    69.5    80.0    83.0"},{"path":"https://aletorell.github.io/firstlibAlex/articles/Genere_un_rapport_d_analyses.html","id":"générer-un-rapport-complet","dir":"Articles","previous_headings":"","what":"3️⃣ Générer un rapport complet","title":"Générer un rapport d’analyses","text":"la fonction generer_rapport génère un rapport en utilisant un fichier Quarto (.qmd) pour analyser les caractéristiques des élus lors des élections françaises de 2024, en se basant sur les paramètres ‘code_commune’ et ‘code_departement’. Le rapport sera rendu dans le fichier spécifié par l’utilisateur ou choisi via une boîte de dialogue si le chemin de sortie n’est pas précisé. EXEMPLE Nous procédons à créer un rapport de la commune 1002 et le département 44: Dans le dossier “unicornio” le rapport sera créé sous le nom “rapport.html”","code":"generer_rapport(1002, 44, output = \"C:/Users/aalex/OneDrive/Escritorio/unicornio/rapport.html\")"},{"path":"https://aletorell.github.io/firstlibAlex/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Àlex Chafes Martorell. Author, maintainer.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chafes Martorell À (2025). firstlibAlex: Analyse des élections françaises de 2024. R package version 0.0.0.9000, https://aletorell.github.io/firstlibAlex/, https://github.com/aletorell/firstlibAlex.","code":"@Manual{,   title = {firstlibAlex: Analyse des élections françaises de 2024},   author = {Àlex {Chafes Martorell}},   year = {2025},   note = {R package version 0.0.0.9000, https://aletorell.github.io/firstlibAlex/},   url = {https://github.com/aletorell/firstlibAlex}, }"},{"path":"https://aletorell.github.io/firstlibAlex/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 firstlibAlex authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/calcul_distribution_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcul_distribution_age — calcul_distribution_age","title":"Calcul_distribution_age — calcul_distribution_age","text":"Cette fonction calcule la distribution des âges des individus dans un jeu de données en utilisant la date de naissance. Elle retourne les quantiles des âges des individus, allant du minimum au maximum, ainsi que les quantiles à 25%, 50% (médiane) et 75%.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/calcul_distribution_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcul_distribution_age — calcul_distribution_age","text":"","code":"calcul_distribution_age(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/calcul_distribution_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcul_distribution_age — calcul_distribution_age","text":"data Un data.frame contenant une colonne \"Date.de.naissance\" avec les dates de naissance des individus au format \"jour/mois/année\".","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/calcul_distribution_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcul_distribution_age — calcul_distribution_age","text":"Un vecteur numérique contenant les quantiles des âges des individus dans le jeu de données. Les quantiles sont calculés pour les probabilités suivantes : 0, 0.25, 0.5, 0.75, et 1.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/compter_nombre_d_adjoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Compte_Nombre_d_adjoints — compter_nombre_d_adjoints","title":"Compte_Nombre_d_adjoints — compter_nombre_d_adjoints","text":"Cette fonction compte le nombre d'adjoints","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/compter_nombre_d_adjoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compte_Nombre_d_adjoints — compter_nombre_d_adjoints","text":"","code":"compter_nombre_d_adjoints(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/compter_nombre_d_adjoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compte_Nombre_d_adjoints — compter_nombre_d_adjoints","text":"data un dataframe qui contient les informations des élus.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/compter_nombre_d_adjoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compte_Nombre_d_adjoints — compter_nombre_d_adjoints","text":"un entier correspondant au nombre d'adjoints.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_commune.html","id":null,"dir":"Reference","previous_headings":"","what":"Creer_commune — creer_commune","title":"Creer_commune — creer_commune","text":"Cette fonction prend un data.frame en entrée et renvoie un data.frame avec la classe 'commune'. Le data.frame d'entrée doit inclure la colonne 'Libellé.de.la.commune' et cette fonction va extraire les lignes correspondant à une commune spécifique.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_commune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creer_commune — creer_commune","text":"","code":"creer_commune(data, commune_name)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_commune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creer_commune — creer_commune","text":"data Un data.frame contenant des informations sur les communes. Il doit inclure la colonne 'Libellé.de.la.commune'. commune_name Nom de la commune que vous voulez extraire du data.frame. Rappellez-vous de ne pas ajouter le numéro de la commune.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_commune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creer_commune — creer_commune","text":"Un data.frame de la classe 'commune' créé à partir du data.frame d'entrée.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_commune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creer_commune — creer_commune","text":"","code":"# Exemple d'utilisation de la fonction creer_commune df <- data.frame(   Code.du.département = c(\"01\", \"01\", \"02\", \"02\"),   Libellé.du.département = c(\"Ain\", \"Ain\", \"Aisne\", \"Aisne\"),   Libellé.de.la.commune = c(\"Lyon\", \"Lyon\", \"Soissons\", \"Soissons\"),   Nom.de.l.élu = c(\"Dupont\", \"Martin\", \"Lemoine\", \"Dubois\") ) commune_obj <- creer_commune(df, \"Lyon\")  # Sélectionne les données pour la commune \"Lyon\" print(commune_obj)  # Affiche le data.frame de la commune avec la classe 'commune' #>   Code.du.département Libellé.du.département Libellé.de.la.commune Nom.de.l.élu #> 1                  01                    Ain                  Lyon       Dupont #> 2                  01                    Ain                  Lyon       Martin"},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_departement.html","id":null,"dir":"Reference","previous_headings":"","what":"Creer_departement — creer_departement","title":"Creer_departement — creer_departement","text":"Cette fonction prend un data.frame en entrée et renvoie un data.frame avec la classe 'departement'. Le data.frame d'entrée doit inclure la colonne 'Libellé.du.département' et cette fonction va extraire les lignes correspondant à un département spécifique.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_departement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creer_departement — creer_departement","text":"","code":"creer_departement(data, departement_name)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_departement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creer_departement — creer_departement","text":"data Un data.frame contenant des informations sur les départements. Il doit inclure la colonne 'Libellé.du.département'. departement_name Nom du département que vous voulez extraire du data.frame. Rappellez-vous de ne pas ajouter le numéro du département.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_departement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creer_departement — creer_departement","text":"Un data.frame de la classe 'departement' créé à partir du data.frame d'entrée.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/creer_departement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creer_departement — creer_departement","text":"","code":"# Exemple d'utilisation de la fonction creer_departement df <- data.frame(   Code.du.département = c(\"01\", \"01\", \"02\", \"02\"),   Libellé.du.département = c(\"Ain\", \"Ain\", \"Aisne\", \"Aisne\"),   Libellé.de.la.commune = c(\"Lyon\", \"Lyon\", \"Soissons\", \"Soissons\"),   Nom.de.l.élu = c(\"Dupont\", \"Martin\", \"Lemoine\", \"Dubois\") ) departement_obj <- creer_departement(df, \"Ain\")  # Sélectionne les données pour le département \"Ain\" print(departement_obj)  # Affiche le data.frame du département avec la classe 'departement' #>   Code.du.département Libellé.du.département Libellé.de.la.commune Nom.de.l.élu #> 1                  01                    Ain                  Lyon       Dupont #> 2                  01                    Ain                  Lyon       Martin"},{"path":"https://aletorell.github.io/firstlibAlex/reference/elus_cm.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset des élus — elus_cm","title":"Dataset des élus — elus_cm","text":"Ce dataset contient des informations sur les élus d'une ou plusieurs communes et departéments en France, y compris leur nom, prénom, date de naissance, catégorie socio-professionnelle, et d'autres informations concernant leur mandat.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/elus_cm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset des élus — elus_cm","text":"","code":"elus_cm"},{"path":[]},{"path":"https://aletorell.github.io/firstlibAlex/reference/elus_cm.html","id":"-elus-cm-","dir":"Reference","previous_headings":"","what":"'elus_cm'","title":"Dataset des élus — elus_cm","text":"Un dataframe composé de 14 colonnes et 489972 lignes. Code.du.département Code du département où l'élu.e exerce. Libellé.du.département Nom du département où l'élu.e exerce. Code.de.la.commune Code de la commune où l'élu.e exerce. Libellé.de.la.commune Nom de la commune où l'élu.e exerce. Nom.de.l.élu Nom de l'élu.e. Prénom.de.l.élu Prénom de l'élu.e. Code.sexe M pour les hommes et F pour les femmes. Date.de.naissance Date de naissance de l'élu.e au format \"jour/mois/année\". Code.de.la.catégorie.socio.professionnelle Code indiquant la catégorie socio-professionnelle de l'élu.e. Libellé.de.la.catégorie.socio.professionnelle Libellé de la catégorie socio-professionnelle de l'élu.e. Date.de.début.du.mandat Date de début du mandat de l'élu.e. Libellé.de.la.fonction Fonction de l'élu.e (par exemple, maire, conseiller). Date.de.début.de.la.fonction Date de début de la fonction de l'élu.e. Code.nationalité Code de la nationalité de l'élu.e.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/elus_cm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset des élus — elus_cm","text":"https://www.data.gouv.fr","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/generer_rapport.html","id":null,"dir":"Reference","previous_headings":"","what":"Générer un rapport basé sur les élections françaises de 2024 — generer_rapport","title":"Générer un rapport basé sur les élections françaises de 2024 — generer_rapport","text":"Cette fonction génère un rapport en utilisant un fichier Quarto (.qmd) pour analyser les caractéristiques des élus lors des élections françaises de 2024, en se basant sur les paramètres 'code_commune' et 'code_departement'. Le rapport sera rendu dans le fichier spécifié par l'utilisateur ou choisi via une boîte de dialogue si le chemin de sortie n'est pas précisé.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/generer_rapport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Générer un rapport basé sur les élections françaises de 2024 — generer_rapport","text":"","code":"generer_rapport(code_commune, code_departement, output = NULL)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/generer_rapport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Générer un rapport basé sur les élections françaises de 2024 — generer_rapport","text":"code_commune Un numéro de commune (doit être un nombre à 4 chiffres minimum). code_departement Un numéro de département (doit être un nombre). output Le chemin d'enregistrement du rapport généré. Si non spécifié, une boîte de dialogue permettra à l'utilisateur de choisir l'emplacement du fichier.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/generer_rapport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Générer un rapport basé sur les élections françaises de 2024 — generer_rapport","text":"Cette fonction génère un fichier rapport en format HTML ou un autre format spécifié dans le fichier Quarto.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/generer_rapport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Générer un rapport basé sur les élections françaises de 2024 — generer_rapport","text":"","code":"# Exemple d'utilisation de la fonction # Générer un rapport pour la commune 75056 et le département 75 generer_rapport(1001, 1, output = \"chemin/vers/le/rapport.html\") #> Vous avez choisi le numéro de commune: 1001 #> Vous avez choisi le numéro de département: 1 #> Error in setwd(output_dir): cannot change working directory  # Si l'utilisateur ne spécifie pas le chemin de sortie, une boîte de dialogue sera ouverte pour sélectionner l'emplacement du fichier generer_rapport(1001, 1) #> Vous avez choisi le numéro de commune: 1001 #> Vous avez choisi le numéro de département: 1 #>   #>   #> processing file: rapport.qmd  #> 1/33                     #> 2/33 [unnamed-chunk-1]   #> 3/33                     #> 4/33 [unnamed-chunk-2]   #> 5/33                     #> 6/33 [unnamed-chunk-3]   #> 7/33                     #> 8/33 [unnamed-chunk-4]   #> 9/33                     #> 10/33 [unnamed-chunk-5]   #> 11/33                     #> 12/33 [unnamed-chunk-6]   #> 13/33                     #> 14/33 [unnamed-chunk-7]   #> 15/33                     #> 16/33 [unnamed-chunk-8]   #> 17/33                     #> 18/33 [unnamed-chunk-9]   #> 19/33                     #> 20/33 [unnamed-chunk-10]  #> 21/33                     #> 22/33 [unnamed-chunk-11]  #> 23/33                     #> 24/33 [unnamed-chunk-12]  #> 25/33                     #> 26/33 [unnamed-chunk-13]  #> 27/33                     #> 28/33 [unnamed-chunk-14]  #> 29/33                     #> 30/33 [unnamed-chunk-15]  #> 31/33                     #> 32/33 [unnamed-chunk-16]  #> 33/33                     #> output file: rapport.knit.md  #>   #> pandoc --output ..\\..\\..\\..\\..\\..\\OneDrive\\Escritorio\\unicornio\\rapport1.html #>   to: html #>   standalone: true #>   section-divs: true #>   html-math-method: mathjax #>   wrap: none #>   default-image-extension: png #>    #> metadata #>   document-css: false #>   link-citations: true #>   date-format: long #>   lang: en #>   title: rapport #>   author: Àlex Chafes Martorell #>    #> Output created: ..\\..\\..\\..\\..\\..\\OneDrive\\Escritorio\\unicornio\\rapport1.html #>  #>  #> Rapport généré avec succès à: C:\\Users\\aalex\\OneDrive\\Escritorio\\unicornio\\rapport1.html"},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_code_professions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot_professions — plot_code_professions","title":"Plot_professions — plot_code_professions","text":"Cette fonction génère un graphique en barres horizontal représentant la distribution des codes socio-professionnels des élus dans un data.frame. Elle utilise la colonne \"Libellé.de.la.catégorie.socio.professionnelle\" pour créer un tableau de fréquences et affiche un barplot de ces fréquences.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_code_professions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot_professions — plot_code_professions","text":"","code":"plot_code_professions(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_code_professions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot_professions — plot_code_professions","text":"data Un data.frame contenant les informations suivantes : \"Libellé.de.la.catégorie.socio.professionnelle\" : La catégorie socio-professionnelle de l'élu.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_code_professions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot_professions — plot_code_professions","text":"Un graphique en barres horizontal affichant la distribution des codes socio-professionnels.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_code_professions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot_professions — plot_code_professions","text":"","code":"# Exemple d'utilisation data <- data.frame(   Libellé.de.la.catégorie.socio.professionnelle = c(\"Enseignant\", \"Médecin\", \"Ingénieur\", \"Médecin\", \"Enseignant\") ) plot_code_professions(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_commune.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot_commune — plot_commune","title":"Plot_commune — plot_commune","text":"Cette fonction génère un graphique en barres pour visualiser la distribution des catégories socio-professionnelles des élu.e.s dans une commune spécifique. Le titre du graphique sera le nom de la commune suivi du nom de son département. L'axe des abscisses s'appelle \"Libellés des codes professionnels pour les élus\", où X est remplacé par le nombre d'élus de la commune.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_commune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot_commune — plot_commune","text":"","code":"plot_commune(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_commune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot_commune — plot_commune","text":"data Un data.frame contenant les informations des élu.e.s. Il doit inclure les colonnes suivantes : \"Libellé.de.la.commune\" : Le nom de la commune. \"Libellé.du.département\" : Le nom du département. \"Libellé.de.la.catégorie.socio.professionnelle\" : La catégorie socio-professionnelle des élu.e.s.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_commune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot_commune — plot_commune","text":"Aucun retour, mais affiche un graphique en barres horizontal.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_commune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot_commune — plot_commune","text":"","code":"# Exemple d'utilisation ajusté à la fonction plot_commune # Créons un data.frame de données fictives df <- data.frame(   Code.du.département = c(\"01\", \"01\", \"01\", \"01\", \"02\", \"02\"),   Libellé.du.département = c(\"Ain\", \"Ain\", \"Ain\", \"Ain\", \"Aisne\", \"Aisne\"),   Libellé.de.la.commune = c(\"Lyon\", \"Lyon\", \"Lyon\", \"Lyon\", \"Soissons\", \"Soissons\"),   Nom.de.l.élu = c(\"Dupont\", \"Martin\", \"Lemoine\", \"Bernard\", \"Dubois\", \"Lemoine\"),   Prénom.de.l.élu = c(\"Jean\", \"Pierre\", \"Luc\", \"Sophie\", \"Marc\", \"Claire\"),   Libellé.de.la.catégorie.socio.professionnelle = c(\"Médecin\", \"Ingénieur\", \"Enseignant\", \"Médecin\", \"Médecin\", \"Ingénieur\") )  # Filtrons le data.frame pour ne contenir que les données d'une commune spécifique df_lyon <- df[df$Libellé.de.la.commune == \"Lyon\", ]  # Appel de la fonction plot_commune avec le data.frame df_lyon plot_commune(df_lyon)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_departement.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_departement — plot_departement","title":"plot_departement — plot_departement","text":"Cette fonction génère des graphiques en barres horizontales pour visualiser les 10 catégories socio-professionnelles les plus représentées dans un département donné. Le titre du graphique sera le nom du département, suivi du nombre de communes dans ce département. L'axe des abscisses s'appelle : \"Libellés des 10 codes professionnels les plus représentés pour le département\", où X est remplacé par le nom du département.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_departement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_departement — plot_departement","text":"","code":"plot_departement(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_departement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_departement — plot_departement","text":"data Un data.frame contenant les informations des élu.e.s. Il doit inclure les colonnes suivantes : \"Libellé.du.département\" : Le nom du département. \"Libellé.de.la.catégorie.socio.professionnelle\" : La catégorie socio-professionnelle des élu.e.s. \"Libellé.de.la.commune\" : Le nom de la commune.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_departement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_departement — plot_departement","text":"Aucun retour, mais affiche un graphique en barres horizontal pour chaque département dans les données.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/plot_departement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_departement — plot_departement","text":"","code":"# Exemple d'utilisation ajusté à la fonction plot_departement # Créons un data.frame de données fictives df <- data.frame(   Code.du.département = c(\"01\", \"01\", \"01\", \"01\", \"02\", \"02\"),   Libellé.du.département = c(\"Ain\", \"Ain\", \"Ain\", \"Ain\", \"Aisne\", \"Aisne\"),   Libellé.de.la.commune = c(\"Lyon\", \"Lyon\", \"Lyon\", \"Lyon\", \"Soissons\", \"Soissons\"),   Nom.de.l.élu = c(\"Dupont\", \"Martin\", \"Lemoine\", \"Bernard\", \"Dubois\", \"Lemoine\"),   Libellé.de.la.catégorie.socio.professionnelle = c(\"Médecin\", \"Ingénieur\", \"Enseignant\", \"Médecin\", \"Médecin\", \"Ingénieur\") )  # Filtrons le data.frame pour qu'il ne contienne que les données d'un département spécifique df_ain <- df[df$Libellé.du.département == \"Ain\", ]  # Appel de la fonction plot_departement avec le data.frame df_ain plot_departement(df_ain)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/summary_commune.html","id":null,"dir":"Reference","previous_headings":"","what":"summary_commune — summary_commune","title":"summary_commune — summary_commune","text":"Cette fonction génère un résumé statistique pour une commune spécifique, y compris les informations sur les élu.e.s de la commune : nombre d'élus, distribution des âges et informations sur l'élu.e le plus âgé.e.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/summary_commune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary_commune — summary_commune","text":"","code":"summary_commune(x)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/summary_commune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary_commune — summary_commune","text":"x Un data.frame contenant les informations des élus d'une commune. Il doit avoir les colonnes suivantes : \"Libellé.de.la.commune\" : Le nom de la commune. \"Nom.de.l.élu\" : Le nom de l'élu. \"Prénom.de.l.élu\" : Le prénom de l'élu. \"Date.de.naissance\" : La date de naissance de l'élu (au format \"jour/mois/année\").","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/summary_commune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary_commune — summary_commune","text":"Aucune valeur n'est retournée. La fonction imprime les résultats dans la console.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/summary_commune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary_commune — summary_commune","text":"Cette fonction génère les résultats suivants pour une commune donnée : Le nom de la commune. Le nombre d'élus dans la commune. La distribution des âges des élus dans la commune. Le nom, le prénom et l'âge de l'élu.e le plus âgé(e). La fonction vérifie également que toutes les colonnes nécessaires sont présentes et que les dates de naissance sont au format correct. En cas d'erreur, elle génère un message d'arrêt.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/summary_commune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summary_commune — summary_commune","text":"","code":"# Exemple d'utilisation avec le dataset fourni df_Nantes <- data.frame(   `Libellé.de.la.commune` = c(\"Nantes\", \"Nantes\", \"Nantes\"),   `Nom.de.l.élu` = c(\"Dupont\", \"Martin\", \"Bernard\"),   `Prénom.de.l.élu` = c(\"Pierre\", \"Jacques\", \"Lucie\"),   `Date.de.naissance` = c(\"01/01/1970\", \"15/03/1980\", \"23/06/1990\") ) summary_commune(df_Nantes) #> Commune: Nantes  #> Nombre d'élu.e.s: 3  #> Distribution des âges: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   34.00   39.00   44.00   44.33   49.50   55.00  #> L'élu.e le plus âgé(e): #>   Nom.de.l.élu Prénom.de.l.élu Age #> 1       Dupont          Pierre  55"},{"path":"https://aletorell.github.io/firstlibAlex/reference/Summary_departement.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary_department — Summary_departement","title":"Summary_department — Summary_departement","text":"Cette fonction génère un résumé statistique des élus d'un département, y compris les informations sur les âges, les élus les plus âgés et les plus jeunes, ainsi que les communes ayant les moyennes d'âge les plus faibles et les plus élevées.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/Summary_departement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary_department — Summary_departement","text":"","code":"Summary_departement(x)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/Summary_departement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary_department — Summary_departement","text":"x Un data.frame contenant les informations des élus. Il doit avoir les colonnes suivantes : \"Code.du.département\" : Le code du département. \"Libellé.du.département\" : Le nom du département. \"Libellé.de.la.commune\" : Le nom de la commune. \"Nom.de.l.élu\" : Le nom de l'élu. \"Prénom.de.l.élu\" : Le prénom de l'élu. \"Date.de.naissance\" : La date de naissance de l'élu (au format \"jour/mois/année\").","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/Summary_departement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary_department — Summary_departement","text":"Aucune valeur n'est retournée, mais la fonction affiche les résultats suivants : Le nom du département. Le nombre de communes dans le département. Le nombre d'élu.e.s dans le département. La distribution des âges des élu.e.s. Le nom, le prénom, l'âge et la commune de l'élu.e le plus âgé(e). Le nom, le prénom, l'âge et la commune de l'élu.e le plus jeune. Le nom de la commune ayant la moyenne d'âge la plus faible, ainsi que la distribution des âges des élu.e.s de cette commune. Le nom de la commune ayant la moyenne d'âge la plus élevée, ainsi que la distribution des âges des élu.e.s de cette commune.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/Summary_departement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary_department — Summary_departement","text":"","code":"# Exemple d'utilisation # Supposons que df est un dataframe contenant les données nécessaires df <- data.frame(   `Code.du.département` = c(\"01\", \"01\", \"01\"),   `Libellé.du.département` = c(\"Ain\", \"Ain\", \"Ain\"),   `Libellé.de.la.commune` = c(\"Bourg-en-Bresse\", \"Ambérieu-en-Bugey\", \"Lagnieu\"),   `Nom.de.l.élu` = c(\"Dupont\", \"Martin\", \"Bernard\"),   `Prénom.de.l.élu` = c(\"Pierre\", \"Jacques\", \"Lucie\"),   `Date.de.naissance` = c(\"01/01/1970\", \"15/03/1980\", \"23/06/1990\") )  # Appel de la fonction avec le dataframe exemple Summary_departement(df) #> Nom du département: Ain  #> Nombre de communes: 3  #> Nombre d'élu.e.s: 3  #> Distribution des âges des élu.e.s: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>      35      40      45      45      50      55  #>  #> L'élu.e le/la plus âgé(e): Dupont Pierre - Age: 55 - Commune: Bourg-en-Bresse  #>  #> L'élu.e le/la plus jeune: Bernard Lucie - Age: 35 - Commune: Lagnieu  #>  #> Commune avec la moyenne d'âge la plus faible: Lagnieu  #> Distribution des âges des élu.e.s de cette commune: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>      35      35      35      35      35      35  #>  #> Commune avec la moyenne d'âge la plus élevée: Bourg-en-Bresse  #> Distribution des âges des élu.e.s de cette commune: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>      55      55      55      55      55      55"},{"path":"https://aletorell.github.io/firstlibAlex/reference/trouver_l_elu_le_plus_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Trouver l'élu le plus âgé — trouver_l_elu_le_plus_age","title":"Trouver l'élu le plus âgé — trouver_l_elu_le_plus_age","text":"Cette fonction prend un data.frame contenant des informations sur les élus, y compris leur date de naissance, et retourne les informations de l'élu le plus âgé.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/trouver_l_elu_le_plus_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trouver l'élu le plus âgé — trouver_l_elu_le_plus_age","text":"","code":"trouver_l_elu_le_plus_age(data)"},{"path":"https://aletorell.github.io/firstlibAlex/reference/trouver_l_elu_le_plus_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trouver l'élu le plus âgé — trouver_l_elu_le_plus_age","text":"data Un data.frame contenant les colonnes suivantes : \"Nom.de.l.élu\" : Le nom de l'élu. \"Prénom.de.l.élu\" : Le prénom de l'élu. \"Date.de.naissance\" : La date de naissance de l'élu au format \"jour/mois/année\".","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/trouver_l_elu_le_plus_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trouver l'élu le plus âgé — trouver_l_elu_le_plus_age","text":"Un data.frame contenant les informations de l'élu le plus âgé, incluant : \"Nom.de.l.élu\" : Le nom de l'élu. \"Prénom.de.l.élu\" : Le prénom de l'élu. \"Age\" : L'âge de l'élu en années.","code":""},{"path":"https://aletorell.github.io/firstlibAlex/reference/trouver_l_elu_le_plus_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trouver l'élu le plus âgé — trouver_l_elu_le_plus_age","text":"","code":"# Exemple d'utilisation data <- data.frame(   Nom.de.l.élu = c(\"Dupont\", \"Lemoine\", \"Dufresne\"),   Prénom.de.l.élu = c(\"Pierre\", \"Sophie\", \"Marc\"),   Date.de.naissance = c(\"01/01/1970\", \"15/05/1980\", \"23/07/1965\") ) # Appeler la fonction pour trouver l'élu le plus âgé trouver_l_elu_le_plus_age(data) #>   Nom.de.l.élu Prénom.de.l.élu Age #> 3     Dufresne            Marc  59 # Retourne : Dupont, Pierre, 55"}]
